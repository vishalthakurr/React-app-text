{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","to","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newText","toUpperCase","showalert","split","length","Alert","alert","role","word","c","toLowerCase","charAt","slice","capt","msg","defaultProps","App","modestate","setalert","meassage","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3fe1298c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" to=\"#\" >Home</a>\r\n              </li> \r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li> */}\r\n\r\n\r\n            </ul>\r\n            \r\n              <div className={`form-check form-switch ml-auto  text-${props.mode === 'light' ? 'dark ' : 'light'} `}>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n              </div>\r\n          \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"add title\"\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  \r\n  \r\n  const handelupclick = () => {\r\n    // console.log(\"upper case\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showalert(\"converted to Upper case\" ,\"success\")\r\n  };\r\n\r\n  const handelclearclick = () => {\r\n    setText(\"\");\r\n    props.showalert(\"Clear Text Successful\" ,\"success\")\r\n\r\n  };\r\n\r\n  // --------------------------------------------\r\n  // const [mystyle, setmystyle] = useState({\r\n  //   color: \"black\",\r\n  //   backgroundColor: \"white\"\r\n  // })\r\n\r\n  // const [mode, setmode] = useState(\"Dark mode\")\r\n  // const handelcoclick = () => {\r\n\r\n  //   if (mystyle.color === 'white') {\r\n\r\n  //     setmystyle({\r\n  //       color: \"black\",\r\n  //       backgroundColor: \"white\"\r\n  //     })\r\n  //     setmode(\"Dark mode\")\r\n\r\n  //   }\r\n  //   else {\r\n  //     setmystyle({\r\n  //       color: \"white\",\r\n  //       backgroundColor: \"black\"\r\n  //     })\r\n  //     setmode(\"light mode\")\r\n\r\n  //   }\r\n\r\n  // };\r\n  // -------------------------------------\r\n  const handelonchange = (event) => {\r\n    // console.log(\"on change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className = \"container\"  style={{ color: props.mode === 'dark' ?   'white':'black ' }}>\r\n        <h1  >{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handelonchange}\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"\r\n            style={{backgroundColor : props.mode === 'dark' ?  'gray ': 'white' }}\r\n          ></textarea>\r\n\r\n          <button className=\"btn my-4 btn-primary mx-3\" onClick={handelupclick}>\r\n            convert to uppercase\r\n          </button>\r\n          <button className=\"btn my-4 btn-primary mx-3\" onClick={handelclearclick}>\r\n            Clear\r\n          </button>\r\n         \r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\" style={{ color: props.mode === 'dark' ?   'white':'black ' }}>\r\n        <h2> your text summery</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n\r\n        <h2>Reading time </h2>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read the text</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0 ?text: \"somthing Write to the preview here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n\r\n    const capt = (word)=>{\r\n        const c = word.toLowerCase();\r\n\r\n        return c.charAt(0).toUpperCase() + c.slice(1)\r\n     \r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {  props.alert  && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capt(props.alert.type) }</strong> : {props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\n// import About from \"./component//About\";\nimport React, { useState } from 'react'\nimport Alert from \"./component/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\n\n\n// let name = \"Vishal thakur\"\nfunction App() {\n\n  const [mode, modestate] = useState('light')\n  const [alert, setalert] = useState(null)\n\n\n\n  const showalert = (meassage, type) => {\n\n    setalert({\n      msg: meassage,\n      type: type\n    })\n\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n\n  }\n\n\n  const toggleMode = () => {\n\n    if (mode === 'light') {\n      modestate(\"dark\")\n      document.body.style.backgroundColor = '#213a5d'\n      showalert(\"Dark mode has been enable\", \"success\")\n    }\n    else {\n      modestate(\"light\")\n      document.body.style.backgroundColor = 'white'\n      showalert(\"light mode has been enable\", \"success\")\n    }\n\n  }\n\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"vishal  Thakur\" mode={mode} toggleMode={toggleMode} />\n        {/* <Navbar/>   */}\n\n        <Alert alert={alert} />\n\n        <div className=\"container  my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About  />\n              \n            </Route> */}\n\n            {/* <Route exact path=\"/\"> */}\n              <TextForm showalert={showalert} heading=\" Somthing write in the Textarea\" mode={mode} />\n\n            {/* </Route>\n          </Switch> */}\n        </div>\n\n        {/* <About /> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}